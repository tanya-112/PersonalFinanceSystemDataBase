1.


/* Подсчет общей суммы расходов за период по всем подкатегориям вместе(или можно сделать, категориям) */
create procedure ПодсчетРасходовЗаПериод @КодАккаунта as int, @НачалоПериода as date, @КонецПериода as date, @Расход as money output
as
begin
select @Расход=sum(Расходы.Сумма) from Расходы inner join Счета on Расходы.КодСчета=Счета.КодСчета inner join Аккаунты on Счета.КодАккаунта=Аккаунты.КодАккаунта
where Дата between @НачалоПериода and  @КонецПериода and Счета.КодАккаунта=@КодАккаунта
end
go

declare @Расход money
exec ПодсчетРасходовЗаПериод 3,'3/06/2015','3/06/2015', @Расход output 
print @Расход
/* СДЕЛАТЬ, ЧТОБ РАБОТАЛ ТАКОЙ ВАРИАНТ!!!!!!!!
select 'Расходы с '+ @НачалоПериода+' по ' +@КонецПериода+' составляют '+ @Расход + 'грн' 
*/








2.


/* Подсчет суммы расходов за период по каждой из подкатегорий(или можно сделать, категорий) */
create procedure ПодсчетРасходовЗаПериодсПодкатегориями @КодАккаунта as int, @НачалоПериода as date, @КонецПериода as date
as
begin
select sum(Расходы.Сумма), Подкатегории.НазваниеПодкатегории
from Расходы inner join Подкатегории on Расходы.КодПодкатегории=Подкатегории.КодПодкатегории
inner join Счета on Расходы.КодСчета=Счета.КодСчета
inner join Аккаунты on Счета.КодАккаунта=Аккаунты.КодАккаунта
where Дата between @НачалоПериода and  @КонецПериода and Счета.КодАккаунта=@КодАккаунта
group by Подкатегории.НазваниеПодкатегории
end
go


declare @Расход money
exec ПодсчетРасходовЗаПериодсПодкатегориями 1,'1/06/2015','14/06/2015'





3.


/* СДЕЛАТЬ, ЧТОБ РАБОТАЛ ТАКОЙ ВАРИАНТ!!!!!!!!
/* Подсчет общей суммы расходов за период по конкретной подкатегории (или можно сделать, категории) */
create procedure ПодсчетРасходовЗаПериодПоПодкатегории @КодАккаунта as int, @НачалоПериода as date, @КонецПериода as date, @КодПодкатегории as int, @Расход as money output
as
begin
select @Расход=sum(Расходы.Сумма)
from Расходы inner join Подкатегории on Расходы.КодПодкатегории=Подкатегории.КодПодкатегории
inner join Счета on Расходы.КодСчета=Счета.КодСчета
inner join Аккаунты on Счета.КодАккаунта=Аккаунты.КодАккаунта
where Дата between @НачалоПериода and  @КонецПериода and Счета.КодАккаунта=@КодАккаунта and Подкатегории.КодПодкатегории=@КодПодкатегории
end
go


declare @Расход money
exec ПодсчетРасходовЗаПериодПоПодкатегории 1,'1/06/2015','14/06/2015',2, @Расход output 
print 'Расходы на выбранную подкатегорию с '+ @НачалоПериода+'по '+@КонецПериода+' составили: '+@Расход+'грн'
*/



/* Подсчет общей суммы расходов за период по конкретной подкатегории (или можно сделать, категории) */
create procedure ПодсчетРасходовЗаПериодПоПодкатегории @КодАккаунта as int, @НачалоПериода as date, @КонецПериода as date, @КодПодкатегории as int
as
begin
select sum(Расходы.Сумма) as [Сумма Расходов]
from Расходы inner join Подкатегории on Расходы.КодПодкатегории=Подкатегории.КодПодкатегории
inner join Счета on Расходы.КодСчета=Счета.КодСчета
inner join Аккаунты on Счета.КодАккаунта=Аккаунты.КодАккаунта
where Дата between @НачалоПериода and  @КонецПериода and Счета.КодАккаунта=@КодАккаунта and Подкатегории.КодПодкатегории=@КодПодкатегории
end
go


declare @Расход money
exec ПодсчетРасходовЗаПериодПоПодкатегории 1,'1/06/2015','14/06/2015',2






4.



/* Подсчет общего капитала в наличии у пользователя (суммируются средства на всех счетах)*/
create procedure ПодсчетТекущегоКапитала @КодАккаунта as int, @Капитал as money output
as
begin
select @Капитал=sum(Сумма) from Счета inner join Аккаунты on Счета.КодАккаунта=Аккаунты.КодАккаунта
where Счета.КодАккаунта=@КодАккаунта
end
go

declare @Капитал money
exec ПодсчетТекущегоКапитала 3, @Капитал output 
print @Капитал





5.


/* Насколько возрос суммарный капитал с момента создания цели)*/
create procedure Цель_НасколькоВозросКапитал @КодАккаунта as int, @РостКапитала as money output
as
begin
select @РостКапитала=Аккаунты.ВесьКапитал-Цели.НачальныйКапитал from Цели inner join Аккаунты on Цели.КодАккаунта=Аккаунты.КодАккаунта
where Цели.КодАккаунта=@КодАккаунта
end
go

declare @РостКапитала money
exec ЦельНасколькоВозросКапитал 2, @РостКапитала output 
select @РостКапитала



6.


/* Сколько есть сейчас в процентном соотношении относительно целевой суммы)*/
create procedure Цель_СколькоЕстьвПроцентах @КодАккаунта as int, @ДолявПроцентах as tinyint output
as
begin
select @ДолявПроцентах=(Аккаунты.ВесьКапитал/Цели.СуммаНакопления)*100 from Цели inner join Аккаунты on Цели.КодАккаунта=Аккаунты.КодАккаунта
where Цели.КодАккаунта=@КодАккаунта
end
go

declare @ДолявПроцентах tinyint
exec Цель_СколькоЕстьвПроцентах 2, @ДолявПроцентах output 
print @ДолявПроцентах






7.



/* Сколько еще средств необходимо до целевой суммы)*/
create procedure Цель_СколькоЕщеКопить @КодАккаунта as int, @ОсталосьКопить as money output
as
begin
select @ОсталосьКопить=Цели.СуммаНакопления-Аккаунты.ВесьКапитал from Цели inner join Аккаунты on Цели.КодАккаунта=Аккаунты.КодАккаунта
where Цели.КодАккаунта=@КодАккаунта
end
go

declare @ОсталосьКопить money
exec Цель_СколькоЕщеКопить 2, @ОсталосьКопить output 
print @ОсталосьКопить



8.


/* Перевод средств между счетами пользователя
(используется, к примеру, если пользователь снял определенную сумму с банковской карточки,
 т.е. осуществляется перевод со счета "Банковская карта" на счет "Наличные")*/
create procedure ПереводМеждуСчетами @КодСчета1 as int, @КодСчета2 as int, @СуммаПеревода as money
as
begin
update Счета set Сумма=Сумма-@СуммаПеревода 
where КодСчета=@КодСчета1
update Счета set Сумма=Сумма+@СуммаПеревода 
where КодСчета=@КодСчета2
end
go

exec ПереводМеждуСчетами 4,3,1200